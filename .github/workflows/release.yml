name: Create Releases and Build Docker images

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

jobs:
  create-release-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version:
          - '14'
          - '16'
          - '18'
          - '20'
          - '22'
        type:
          - regular
          - full
          - gulp4
          - gulp5
          - gulp4-full
          - gulp5-full

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Set directory and tag names
        run: |
          echo "DIR=${{ matrix.version }}" >> $GITHUB_ENV
          case "${{ matrix.type }}" in
            "regular")
              echo "TAG_NAME=node-v${{ matrix.version }}" >> $GITHUB_ENV
              echo "DOCKER_TAG=mxmd/node:v${{ matrix.version }}" >> $GITHUB_ENV
              ;;
            "full")
              echo "TAG_NAME=node-v${{ matrix.version }}-full" >> $GITHUB_ENV
              echo "DOCKER_TAG=mxmd/node:v${{ matrix.version }}-full" >> $GITHUB_ENV
              ;;
            "gulp4")
              echo "TAG_NAME=node-v${{ matrix.version }}-gulp4" >> $GITHUB_ENV
              echo "DOCKER_TAG=mxmd/node:v${{ matrix.version }}-gulp4" >> $GITHUB_ENV
              ;;
            "gulp5")
              echo "TAG_NAME=node-v${{ matrix.version }}-gulp5" >> $GITHUB_ENV
              echo "DOCKER_TAG=mxmd/node:v${{ matrix.version }}-gulp5" >> $GITHUB_ENV
              ;;
            "gulp4-full")
              echo "TAG_NAME=node-v${{ matrix.version }}-gulp4-full" >> $GITHUB_ENV
              echo "DOCKER_TAG=mxmd/node:v${{ matrix.version }}-gulp4-full" >> $GITHUB_ENV
              ;;
            "gulp5-full")
              echo "TAG_NAME=node-v${{ matrix.version }}-gulp5-full" >> $GITHUB_ENV
              echo "DOCKER_TAG=mxmd/node:v${{ matrix.version }}-gulp5-full" >> $GITHUB_ENV
              ;;
          esac

      - name: Create Release
        run: |
          if [[ -f "${{ env.DIR }}/Dockerfile" ]]; then
            DOCKER_HUB_LINK="https://hub.docker.com/r/mxmd/node/tags?page=1&name=${{ matrix.version }}"
            RELEASE_TITLE="Node.js ${{ matrix.version }} (${{ matrix.type }}) release"
            case "${{ matrix.type }}" in
              "full")
                RELEASE_NOTES="Docker image for Node.js ${{ matrix.version }} with Chrome/Puppeteer support and imagemin dependencies. [View on Docker Hub]($DOCKER_HUB_LINK)"
                ;;
              "gulp4"|"gulp5")
                RELEASE_NOTES="Docker image for Node.js ${{ matrix.version }} with Gulp ${{ matrix.type == 'gulp4' && '4.x' || '5.x' }} and imagemin dependencies. [View on Docker Hub]($DOCKER_HUB_LINK)"
                ;;
              "gulp4-full"|"gulp5-full")
                RELEASE_NOTES="Docker image for Node.js ${{ matrix.version }} with Gulp ${{ contains(matrix.type, 'gulp4') && '4.x' || '5.x' }}, Chrome/Puppeteer support, and imagemin dependencies. [View on Docker Hub]($DOCKER_HUB_LINK)"
                ;;
              *)
                RELEASE_NOTES="Docker image for Node.js ${{ matrix.version }} with imagemin dependencies. [View on Docker Hub]($DOCKER_HUB_LINK)"
                ;;
            esac
            
            if ! gh release view "${{ env.TAG_NAME }}" > /dev/null 2>&1; then
              gh release create "${{ env.TAG_NAME }}" \
                --title "$RELEASE_TITLE" \
                --notes "$RELEASE_NOTES"
              echo "RELEASE_CREATED=true" >> $GITHUB_ENV
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v8.1.5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # ── BUILD ───────────────────────────────────────────────────────────────

      - name: Build Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.DOCKER_TAG }}
          file: ${{ matrix.version }}/Dockerfile
          build-args: |
            NODE_VERSION=${{ matrix.version }}
            ${{ matrix.type == 'regular' && 'INSTALL_CHROME=false' || '' }}
            ${{ matrix.type == 'full' && 'INSTALL_CHROME=true' || '' }}
            ${{ matrix.type == 'gulp4' && 'GULP_VERSION=4.0.0' || '' }}
            ${{ matrix.type == 'gulp5' && 'GULP_VERSION=5.0.0' || '' }}
            ${{ matrix.type == 'gulp4-full' && 'GULP_VERSION=4.0.0' || '' }}
            ${{ matrix.type == 'gulp4-full' && 'INSTALL_CHROME=true' || '' }}
            ${{ matrix.type == 'gulp5-full' && 'GULP_VERSION=5.0.0' || '' }}
            ${{ matrix.type == 'gulp5-full' && 'INSTALL_CHROME=true' || '' }}

      - name: Generate build timestamp
        id: build-timestamp
        run: echo "BUILD_TIMESTAMP=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      # ── PUSH ────────────────────────────────────────────────────────────────

      - name: Push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          provenance: true
          sbom: true
          attestations: type=sbom,generator=docker/scout
          tags: |
            ${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_TAG }}-${{ env.BUILD_TIMESTAMP }}
          file: ${{ matrix.version }}/Dockerfile
          build-args: |
            NODE_VERSION=${{ matrix.version }}
            ${{ matrix.type == 'regular' && 'INSTALL_CHROME=false' || '' }}
            ${{ matrix.type == 'full' && 'INSTALL_CHROME=true' || '' }}
            ${{ matrix.type == 'gulp4' && 'GULP_VERSION=4.0.0' || '' }}
            ${{ matrix.type == 'gulp5' && 'GULP_VERSION=5.0.0' || '' }}
            ${{ matrix.type == 'gulp4-full' && 'GULP_VERSION=4.0.0' || '' }}
            ${{ matrix.type == 'gulp4-full' && 'INSTALL_CHROME=true' || '' }}
            ${{ matrix.type == 'gulp5-full' && 'GULP_VERSION=5.0.0' || '' }}
            ${{ matrix.type == 'gulp5-full' && 'INSTALL_CHROME=true' || '' }}
